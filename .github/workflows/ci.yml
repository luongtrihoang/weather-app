name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  NODE_VERSION: '20.x'
  NEXT_PUBLIC_OPENWEATHER_API_KEY: test_api_key

jobs:
  # Quality checks (linting, type checking)
  quality:
    name: Code Quality
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run ESLint
      run: npm run lint

    - name: Check TypeScript
      run: npx tsc --noEmit

  # Test suite
  test:
    name: Test Suite
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x, 20.x]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run tests
      run: npm test -- --coverage --watchAll=false
      env:
        CI: true

    - name: Upload coverage reports
      uses: actions/upload-artifact@v4
      if: matrix.node-version == '20.x'
      with:
        name: coverage-report-${{ github.sha }}
        path: coverage/
        retention-days: 30

  # Build and deploy check
  build:
    name: Build Check
    runs-on: ubuntu-latest
    needs: [quality, test]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Build application
      run: npm run build
      env:
        NEXT_PUBLIC_OPENWEATHER_API_KEY: ${{ secrets.NEXT_PUBLIC_OPENWEATHER_API_KEY || env.NEXT_PUBLIC_OPENWEATHER_API_KEY }}

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: build-artifacts-${{ github.sha }}
        path: |
          .next/
          !.next/cache/
        retention-days: 7

  # Security audit
  security:
    name: Security Audit
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run security audit
      run: npm audit --audit-level=moderate

  # Final status check
  ci-success:
    name: CI Success
    runs-on: ubuntu-latest
    needs: [quality, test, build, security]
    if: always()

    steps:
    - name: Check all jobs status
      run: |
        if [[ "${{ needs.quality.result }}" == "success" && 
              "${{ needs.test.result }}" == "success" && 
              "${{ needs.build.result }}" == "success" && 
              "${{ needs.security.result }}" == "success" ]]; then
          echo "✅ All CI checks passed!"
          exit 0
        else
          echo "❌ Some CI checks failed:"
          echo "Quality: ${{ needs.quality.result }}"
          echo "Test: ${{ needs.test.result }}"
          echo "Build: ${{ needs.build.result }}"
          echo "Security: ${{ needs.security.result }}"
          exit 1
        fi 